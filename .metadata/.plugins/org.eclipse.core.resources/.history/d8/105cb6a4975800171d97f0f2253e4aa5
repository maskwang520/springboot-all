package com.springboot.cache.service;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CacheConfig;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;

import com.springboot.cache.entity.UserEntity;
import com.springboot.cache.jpa.UserJPA;
/**
 * 实现服务接口，调用UserJPA里面的API就可以
 * @author maskwang
 *2017年6月23日
 */
@Service
@CacheConfig(cacheNames = "user")  //cacheName是缓存区的名称
public class UserService {

    @Autowired
    private UserJPA userJPA;
    //对查询结果进行缓存
 
    public List<UserEntity> list(PageRequest pageRequest)
    {
        return  userJPA.findAll(pageRequest).getContent();
    }
    @Cacheable(key="t_id")
    public UserEntity findOne(long id){
    	return userJPA.findOne(id);
    }
    public List<UserEntity> findAllByAge(int age){
    	return userJPA.nativeQuery(age);
    }
    public int updateUser(int id){
    	return userJPA.updateUser(id);
    }
}
